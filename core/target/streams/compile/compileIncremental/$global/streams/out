[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/pawel/.ivy2/cache/org.apache.tika/tika-core/bundles/tika-core-1.17.jar: class org.apache.tika.Tika now provided by /home/pawel/.ivy2/cache/org.apache.tika/tika-core/jars/tika-core-1.17.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /home/pawel/Downloads/jdk1.8.0_171/jre/lib/rt.jar: could not find class java.lang.Object on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/persisters/persisters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/Constans.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/filters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/Plugin.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/linkers.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/foreaches.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/FileEntity.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/BasicFileInfo.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/Batcher.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/file/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/DocumentMetadataExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/PersistActor.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/file/FileMetadataExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/InfoPersisted.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/image/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/unzip/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/PersistenceService.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/image/ImageMetaExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/DocumentContentExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/MimeType.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/FileReaderGraph.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/ForEach.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/File.java, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/DyskobolSystem.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/Persister.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/FileReaderGraph$$anon$1$$anon$2.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/DocsExtractor$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/ForEach.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/FileStream.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/Persister$$anon$1$$anon$3.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/FileMetaExtract$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Content.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/package$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Content$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Linkers$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/Main.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/ImageMetaExtract.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Filters$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Filters.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Helper.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/Main$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/DocsExtractor.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/Constans$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/package.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/Plugin.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Meta$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/Plugin$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Linkers.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/ImageMetaExtract$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/Constans.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/simple/Library$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/Main$delayedInit$body.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/persisters/Persisters$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/ForEach$$anon$1.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/FileReaderGraph.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/Persister.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/ForEach$$anon$1$$anon$3.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/package.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Meta.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/FileMetaExtract.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/Persister$$anon$1.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/File.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/FileReaderGraph$$anon$1.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/Persister$$anon$1$$anon$2.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/persisters/Persisters.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/package$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/stages/ForEach$$anon$1$$anon$2.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/model/FileProperties.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/pl/dyskobol/prototype/plugin/factories/Helper$.class, /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes/simple/Library.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/home/pawel/.ivy2/cache/org.apache.tika/tika-core/bundles/tika-core-1.17.jar, /home/pawel/Downloads/jdk1.8.0_171/jre/lib/rt.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(pl.dyskobol.model.File, pl.dyskobol.prototype.Main, pl.dyskobol.prototype.stages.package, pl.dyskobol.prototype.stages.ForEach, pl.dyskobol.prototype.plugin.DocsExtractor, pl.dyskobol.prototype.plugin.factories.Filters, pl.dyskobol.prototype.plugin.factories.Linkers, pl.dyskobol.prototype.plugin.factories.Meta, pl.dyskobol.prototype.stages.FileReaderGraph, pl.dyskobol.prototype.plugin.factories.Helper, pl.dyskobol.prototype.plugin.ImageMetaExtract, pl.dyskobol.prototype.plugin.FileMetaExtract, pl.dyskobol.prototype.plugin.persisters.Persisters, pl.dyskobol.prototype.plugin.factories.Content, pl.dyskobol.prototype.plugin.Plugin, pl.dyskobol.model.Constans, pl.dyskobol.prototype.stages.Persister)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileStream.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/FileReaderGraph.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/persisters/persisters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/ForEach.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/Constans.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/File.java, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/DyskobolSystem.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/Persister.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileProperties.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/filters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/Plugin.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/simple/Library.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/linkers.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/foreaches.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileStream.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/FileReaderGraph.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/persisters/persisters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/ForEach.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/Constans.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/File.java, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/DyskobolSystem.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/Persister.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileProperties.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/filters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/Plugin.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/simple/Library.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/linkers.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/foreaches.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(pl.dyskobol.model.File, pl.dyskobol.prototype.Main, pl.dyskobol.prototype.stages.package, pl.dyskobol.prototype.stages.ForEach, pl.dyskobol.prototype.plugin.DocsExtractor, pl.dyskobol.prototype.plugin.factories.Filters, pl.dyskobol.prototype.plugin.factories.Linkers, pl.dyskobol.prototype.plugin.factories.Meta, pl.dyskobol.prototype.stages.FileReaderGraph, pl.dyskobol.prototype.plugin.factories.Helper, pl.dyskobol.prototype.plugin.ImageMetaExtract, pl.dyskobol.prototype.plugin.FileMetaExtract, pl.dyskobol.prototype.plugin.persisters.Persisters, pl.dyskobol.prototype.plugin.factories.Content, pl.dyskobol.prototype.plugin.Plugin, pl.dyskobol.model.Constans, pl.dyskobol.prototype.stages.Persister)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/FileEntity.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/BasicFileInfo.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileStream.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/Batcher.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/file/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/DocumentMetadataExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/FileReaderGraph.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/PersistActor.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/file/FileMetadataExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/InfoPersisted.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/image/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/persisters/persisters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/ForEach.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/Constans.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/File.java, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/unzip/package.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/DyskobolSystem.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/stages/Persister.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/PersistenceService.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/image/ImageMetaExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/model/FileProperties.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/filters.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/Plugin.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugins/document/DocumentContentExtract.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/simple/Library.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/persist/MimeType.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/linkers.scala, /home/pawel/Documents/Dyskobol/dyskobol/core/src/main/scala/pl/dyskobol/prototype/plugin/factories/foreaches.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated package objects: Set(pl.dyskobol.prototype.stages.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 26 sources: invalidated sources (32) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 25 Scala sources and 1 Java source to /home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.3:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.3:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler e020060 for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/pawel/.ivy2/cache/org.scalamacros/paradise_2.12.4/jars/paradise_2.12.4-2.1.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/pawel/.sbt/boot/scala-2.12.4/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/pawel/Documents/Dyskobol/dyskobol/core/target/scala-2.12/classes:/home/pawel/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar:/home/pawel/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/home/pawel/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/pawel/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.11.jar:/home/pawel/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.11.jar:/home/pawel/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/home/pawel/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.2.2.jar:/home/pawel/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar:/home/pawel/.ivy2/cache/org.xerial/sqlite-jdbc/jars/sqlite-jdbc-3.7.2.jar:/home/pawel/.ivy2/cache/com.mchange/c3p0/jars/c3p0-0.9.2.1.jar:/home/pawel/.ivy2/cache/com.mchange/mchange-commons-java/jars/mchange-commons-java-0.2.3.4.jar:/home/pawel/.ivy2/cache/org.apache.tika/tika-core/jars/tika-core-1.17.jar:/home/pawel/.ivy2/cache/org.apache.tika/tika-parsers/bundles/tika-parsers-1.17.jar:/home/pawel/.ivy2/cache/org.gagravarr/vorbis-java-tika/jars/vorbis-java-tika-0.8.jar:/home/pawel/.ivy2/cache/com.healthmarketscience.jackcess/jackcess/jars/jackcess-2.1.8.jar:/home/pawel/.ivy2/cache/commons-lang/commons-lang/jars/commons-lang-2.6.jar:/home/pawel/.ivy2/cache/com.healthmarketscience.jackcess/jackcess-encrypt/jars/jackcess-encrypt-2.1.2.jar:/home/pawel/.ivy2/cache/org.tallison/jmatio/jars/jmatio-1.2.jar:/home/pawel/.ivy2/cache/org.apache.james/apache-mime4j-core/jars/apache-mime4j-core-0.8.1.jar:/home/pawel/.ivy2/cache/org.apache.james/apache-mime4j-dom/bundles/apache-mime4j-dom-0.8.1.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-compress/jars/commons-compress-1.14.jar:/home/pawel/.ivy2/cache/org.tukaani/xz/jars/xz-1.6.jar:/home/pawel/.ivy2/cache/commons-codec/commons-codec/jars/commons-codec-1.10.jar:/home/pawel/.ivy2/cache/org.apache.pdfbox/pdfbox/bundles/pdfbox-2.0.8.jar:/home/pawel/.ivy2/cache/org.apache.pdfbox/fontbox/bundles/fontbox-2.0.8.jar:/home/pawel/.ivy2/cache/org.apache.pdfbox/pdfbox-tools/jars/pdfbox-tools-2.0.8.jar:/home/pawel/.ivy2/cache/org.apache.pdfbox/jempbox/bundles/jempbox-1.8.13.jar:/home/pawel/.ivy2/cache/org.bouncycastle/bcmail-jdk15on/jars/bcmail-jdk15on-1.54.jar:/home/pawel/.ivy2/cache/org.bouncycastle/bcprov-jdk15on/jars/bcprov-jdk15on-1.54.jar:/home/pawel/.ivy2/cache/org.bouncycastle/bcpkix-jdk15on/jars/bcpkix-jdk15on-1.54.jar:/home/pawel/.ivy2/cache/org.apache.poi/poi/jars/poi-3.17.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-collections4/jars/commons-collections4-4.1.jar:/home/pawel/.ivy2/cache/org.apache.poi/poi-scratchpad/jars/poi-scratchpad-3.17.jar:/home/pawel/.ivy2/cache/org.apache.poi/poi-ooxml/jars/poi-ooxml-3.17.jar:/home/pawel/.ivy2/cache/org.apache.poi/poi-ooxml-schemas/jars/poi-ooxml-schemas-3.17.jar:/home/pawel/.ivy2/cache/org.apache.xmlbeans/xmlbeans/jars/xmlbeans-2.6.0.jar:/home/pawel/.ivy2/cache/stax/stax-api/jars/stax-api-1.0.1.jar:/home/pawel/.ivy2/cache/com.github.virtuald/curvesapi/jars/curvesapi-1.04.jar:/home/pawel/.ivy2/cache/org.ccil.cowan.tagsoup/tagsoup/jars/tagsoup-1.2.1.jar:/home/pawel/.ivy2/cache/org.ow2.asm/asm/jars/asm-5.0.4.jar:/home/pawel/.ivy2/cache/com.googlecode.mp4parser/isoparser/jars/isoparser-1.1.18.jar:/home/pawel/.ivy2/cache/com.drewnoakes/metadata-extractor/jars/metadata-extractor-2.10.1.jar:/home/pawel/.ivy2/cache/com.adobe.xmp/xmpcore/jars/xmpcore-5.1.3.jar:/home/pawel/.ivy2/cache/de.l3s.boilerpipe/boilerpipe/jars/boilerpipe-1.1.0.jar:/home/pawel/.ivy2/cache/com.rometools/rome/jars/rome-1.5.1.jar:/home/pawel/.ivy2/cache/com.rometools/rome-utils/jars/rome-utils-1.5.1.jar:/home/pawel/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.24.jar:/home/pawel/.ivy2/cache/org.gagravarr/vorbis-java-core/jars/vorbis-java-core-0.8.jar:/home/pawel/.ivy2/cache/com.googlecode.juniversalchardet/juniversalchardet/jars/juniversalchardet-1.0.3.jar:/home/pawel/.ivy2/cache/org.codelibs/jhighlight/jars/jhighlight-1.0.2.jar:/home/pawel/.ivy2/cache/com.pff/java-libpst/jars/java-libpst-0.8.1.jar:/home/pawel/.ivy2/cache/com.github.junrar/junrar/jars/junrar-0.7.jar:/home/pawel/.ivy2/cache/org.apache.cxf/cxf-rt-rs-client/bundles/cxf-rt-rs-client-3.0.16.jar:/home/pawel/.ivy2/cache/org.apache.cxf/cxf-rt-transports-http/bundles/cxf-rt-transports-http-3.0.16.jar:/home/pawel/.ivy2/cache/org.apache.cxf/cxf-core/bundles/cxf-core-3.0.16.jar:/home/pawel/.ivy2/cache/org.codehaus.woodstox/woodstox-core-asl/jars/woodstox-core-asl-4.4.1.jar:/home/pawel/.ivy2/cache/org.codehaus.woodstox/stax2-api/bundles/stax2-api-3.1.4.jar:/home/pawel/.ivy2/cache/org.apache.ws.xmlschema/xmlschema-core/bundles/xmlschema-core-2.2.2.jar:/home/pawel/.ivy2/cache/org.apache.cxf/cxf-rt-frontend-jaxrs/bundles/cxf-rt-frontend-jaxrs-3.0.16.jar:/home/pawel/.ivy2/cache/javax.ws.rs/javax.ws.rs-api/jars/javax.ws.rs-api-2.0.1.jar:/home/pawel/.ivy2/cache/javax.annotation/javax.annotation-api/jars/javax.annotation-api-1.2.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-exec/jars/commons-exec-1.3.jar:/home/pawel/.ivy2/cache/org.apache.opennlp/opennlp-tools/bundles/opennlp-tools-1.8.3.jar:/home/pawel/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.5.jar:/home/pawel/.ivy2/cache/com.googlecode.json-simple/json-simple/bundles/json-simple-1.1.1.jar:/home/pawel/.ivy2/cache/com.tdunning/json/jars/json-1.8.jar:/home/pawel/.ivy2/cache/com.google.code.gson/gson/jars/gson-2.8.1.jar:/home/pawel/.ivy2/cache/org.slf4j/jul-to-slf4j/jars/jul-to-slf4j-1.7.24.jar:/home/pawel/.ivy2/cache/org.slf4j/jcl-over-slf4j/jars/jcl-over-slf4j-1.7.24.jar:/home/pawel/.ivy2/cache/edu.ucar/netcdf4/jars/netcdf4-4.5.5.jar:/home/pawel/.ivy2/cache/net.jcip/jcip-annotations/jars/jcip-annotations-1.0.jar:/home/pawel/.ivy2/cache/net.java.dev.jna/jna/jars/jna-4.1.0.jar:/home/pawel/.ivy2/cache/edu.ucar/grib/jars/grib-4.5.5.jar:/home/pawel/.ivy2/cache/com.google.protobuf/protobuf-java/bundles/protobuf-java-2.5.0.jar:/home/pawel/.ivy2/cache/org.jdom/jdom2/jars/jdom2-2.0.4.jar:/home/pawel/.ivy2/cache/org.jsoup/jsoup/jars/jsoup-1.7.2.jar:/home/pawel/.ivy2/cache/org.itadaki/bzip2/jars/bzip2-0.9.1.jar:/home/pawel/.ivy2/cache/edu.ucar/cdm/jars/cdm-4.5.5.jar:/home/pawel/.ivy2/cache/edu.ucar/udunits/jars/udunits-4.5.5.jar:/home/pawel/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.2.jar:/home/pawel/.ivy2/cache/edu.ucar/httpservices/jars/httpservices-4.5.5.jar:/home/pawel/.ivy2/cache/org.apache.httpcomponents/httpclient/jars/httpclient-4.5.4.jar:/home/pawel/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.7.jar:/home/pawel/.ivy2/cache/org.apache.httpcomponents/httpmime/jars/httpmime-4.5.4.jar:/home/pawel/.ivy2/cache/org.quartz-scheduler/quartz/jars/quartz-2.2.0.jar:/home/pawel/.ivy2/cache/c3p0/c3p0/jars/c3p0-0.9.1.1.jar:/home/pawel/.ivy2/cache/net.sf.ehcache/ehcache-core/jars/ehcache-core-2.6.2.jar:/home/pawel/.ivy2/cache/com.google.guava/guava/bundles/guava-17.0.jar:/home/pawel/.ivy2/cache/com.beust/jcommander/jars/jcommander-1.35.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-csv/jars/commons-csv-1.0.jar:/home/pawel/.ivy2/cache/org.apache.sis.core/sis-utility/jars/sis-utility-0.6.jar:/home/pawel/.ivy2/cache/org.opengis/geoapi/bundles/geoapi-3.0.0.jar:/home/pawel/.ivy2/cache/javax.measure/jsr-275/jars/jsr-275-0.9.3.jar:/home/pawel/.ivy2/cache/org.apache.sis.storage/sis-netcdf/bundles/sis-netcdf-0.6.jar:/home/pawel/.ivy2/cache/org.apache.sis.storage/sis-storage/bundles/sis-storage-0.6.jar:/home/pawel/.ivy2/cache/org.apache.sis.core/sis-metadata/jars/sis-metadata-0.6.jar:/home/pawel/.ivy2/cache/org.apache.sis.core/sis-referencing/bundles/sis-referencing-0.6.jar:/home/pawel/.ivy2/cache/edu.usc.ir/sentiment-analysis-parser/jars/sentiment-analysis-parser-0.1.jar:/home/pawel/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.9.2.jar:/home/pawel/.ivy2/cache/commons-logging/commons-logging/jars/commons-logging-1.2.jar:/home/pawel/.ivy2/cache/cognitivej/cognitivej/jars/cognitivej-0.6.2.jar:/home/pawel/.ivy2/cache/com.mashape.unirest/unirest-java/jars/unirest-java-1.4.9.jar:/home/pawel/.ivy2/cache/org.apache.httpcomponents/httpasyncclient/jars/httpasyncclient-4.1.1.jar:/home/pawel/.ivy2/cache/org.apache.httpcomponents/httpcore-nio/jars/httpcore-nio-4.4.4.jar:/home/pawel/.ivy2/cache/org.json/json/bundles/json-20160212.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.4.jar:/home/pawel/.ivy2/cache/com.intellij/annotations/jars/annotations-12.0.jar:/home/pawel/.ivy2/cache/org.bytedeco/javacv/jars/javacv-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/opencv/jars/opencv-3.0.0-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/ffmpeg/jars/ffmpeg-2.8.1-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/flycapture/jars/flycapture-2.8.3.1-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/libdc1394/jars/libdc1394-2.2.3-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/libfreenect/jars/libfreenect-0.5.3-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/videoinput/jars/videoinput-0.200-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/artoolkitplus/jars/artoolkitplus-2.3.1-1.1.jar:/home/pawel/.ivy2/cache/org.bytedeco.javacpp-presets/flandmark/jars/flandmark-1.07-1.1.jar:/home/pawel/.ivy2/cache/org.apache.commons/commons-imaging/jars/commons-imaging-1.0-R1401825.jar:/home/pawel/.ivy2/cache/org.apache.pdfbox/jbig2-imageio/jars/jbig2-imageio-3.0.0.jar:/home/pawel/.ivy2/cache/org.postgresql/postgresql/jars/postgresql-9.3-1100-jdbc4.jar:/home/pawel/.ivy2/cache/com.typesafe.slick/slick_2.12/bundles/slick_2.12-3.2.0.jar:/home/pawel/.ivy2/cache/org.slf4j/slf4j-nop/jars/slf4j-nop-1.6.4.jar:/home/pawel/.ivy2/cache/com.typesafe.akka/akka-persistence_2.12/jars/akka-persistence_2.12-2.5.4.jar:/home/pawel/.sbt/boot/scala-2.12.4/lib/scala-reflect.jar:/home/pawel/.ivy2/cache/ch.jodersky/sbt-jni-macros_2.12/jars/sbt-jni-macros_2.12-1.3.1.jar:/home/pawel/.ivy2/cache/org.typelevel/macro-compat_2.12/jars/macro-compat_2.12-1.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 70.034659549 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@50c84a7d directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 19.453401853 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.301786088 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 19.880124405 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.model.Constans...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.model.Constans)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.model.Constans)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.model.Constans,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msoffice,[Default]), UsedName(imgs,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(txt,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Constans,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pdf,[Default]), UsedName(toString,[Default]), UsedName(xml,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.model.Constans has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msoffice,[Default]), UsedName(imgs,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(txt,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Constans,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pdf,[Default]), UsedName(toString,[Default]), UsedName(xml,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.model.Constans)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.file.filters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.file.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.file.filters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugins.file.filters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.flows...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(flows,[Default]), UsedName(DocumentMetaDataExtract,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.flows,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DocumentContentExtract,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(DocumentMetaDataExtract,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.document.flows has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DocumentContentExtract,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(DocumentMetaDataExtract,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.model.FileStream...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.model.FileStream)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.model.FileStream)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.unzip.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: pl.dyskobol.model.File[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.model.FileStream,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(readNBytes,[Default]), UsedName(readAllBytes,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(transferTo,[Default]), UsedName(hashCode,[Default]))) invalidates 2 classes due to The pl.dyskobol.model.FileStream has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(readNBytes,[Default]), UsedName(readAllBytes,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(transferTo,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.model.FileStream)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.model.File)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.BasicFileInfo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.BasicFileInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.BasicFileInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.FileEntity.Persist: Set(UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(BasicFileInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of PersistenceService: Set(UsedName(BasicFileInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.Batcher: Set(UsedName(BasicFileInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.PersistActor: Set(UsedName(propertyValue,[Default]), UsedName(property,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(name,[Default]), UsedName(BasicFileInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.FileEntity: Set(UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(BasicFileInfo,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.BasicFileInfo,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(propertyValue,[Default]), UsedName(property,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(pl;dyskobol;prototype;persist;BasicFileInfo;init;,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(BasicFileInfo,[Default]), UsedName(copy$default$3,[Default]))) invalidates 6 classes due to The pl.dyskobol.prototype.persist.BasicFileInfo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(propertyValue,[Default]), UsedName(property,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(pl;dyskobol;prototype;persist;BasicFileInfo;init;,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(BasicFileInfo,[Default]), UsedName(copy$default$3,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.BasicFileInfo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.persist.FileEntity.Persist, PersistenceService, pl.dyskobol.prototype.persist.Batcher, pl.dyskobol.prototype.persist.PersistActor, pl.dyskobol.prototype.persist.FileEntity)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from simple.Library...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(simple.Library)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(simple.Library)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.FileReaderGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.model.FileStream. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(simple.Library,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The simple.Library has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(simple.Library)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.Tables.MimeType...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.Tables.MimeType)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.Tables.MimeType)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.Tables.MimeType,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(id,[Default]), UsedName($init$,[Default]), UsedName(MimeType,[Default]), UsedName(tupled,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(unapply,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(pl;dyskobol;prototype;persist;Tables;MimeType;init;,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(mime,[Default]), UsedName(copy$default$3,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.Tables.MimeType has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(id,[Default]), UsedName($init$,[Default]), UsedName(MimeType,[Default]), UsedName(tupled,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(unapply,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(pl;dyskobol;prototype;persist;Tables;MimeType;init;,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(mime,[Default]), UsedName(copy$default$3,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.Tables.MimeType)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity.Event...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity.Event)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.persist.FileEntity.Persisted by pl.dyskobol.prototype.persist.FileEntity.Event[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity.Persisted, pl.dyskobol.prototype.persist.FileEntity.Event)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity.Event,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filename,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(Event,[Default]), UsedName(FileDescriptor,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.persist.FileEntity.Event has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filename,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(Event,[Default]), UsedName(FileDescriptor,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity.Persisted, pl.dyskobol.prototype.persist.FileEntity.Event)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.Batcher...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.Batcher)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.Batcher)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.Batcher,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(queue,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(pl;dyskobol;prototype;persist;Batcher;init;,[Default]), UsedName(Batcher,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.Batcher has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(queue,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(pl;dyskobol;prototype;persist;Batcher;init;,[Default]), UsedName(Batcher,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.Batcher)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.supportedMimes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.supportedMimes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.supportedMimes)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.supportedMimes,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOffice,[Default]), UsedName(imgs,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(supportedMimes,[Default]), UsedName(html,[Default]), UsedName(txt,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pdf,[Default]), UsedName(toString,[Default]), UsedName(xml,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugins.document.supportedMimes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOffice,[Default]), UsedName(imgs,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(supportedMimes,[Default]), UsedName(html,[Default]), UsedName(txt,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pdf,[Default]), UsedName(toString,[Default]), UsedName(xml,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.supportedMimes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity.NoSuchFile...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity.NoSuchFile)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity.NoSuchFile)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity.NoSuchFile,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;NoSuchFile;init;,[Default]), UsedName(!=,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(fillInStackTrace,[Default]), UsedName(getLocalizedMessage,[Default]), UsedName(apply,[Default]), UsedName(addSuppressed,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName($init$,[Default]), UsedName(NoSuchFile,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(initCause,[Default]), UsedName(setStackTrace,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(getSuppressed,[Default]), UsedName(printStackTrace,[Default]), UsedName(unapply,[Default]), UsedName(FileDescriptor,[Default]), UsedName(getCause,[Default]), UsedName(getMessage,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(getStackTrace,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.FileEntity.NoSuchFile has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;NoSuchFile;init;,[Default]), UsedName(!=,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(fillInStackTrace,[Default]), UsedName(getLocalizedMessage,[Default]), UsedName(apply,[Default]), UsedName(addSuppressed,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName($init$,[Default]), UsedName(NoSuchFile,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(initCause,[Default]), UsedName(setStackTrace,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(getSuppressed,[Default]), UsedName(printStackTrace,[Default]), UsedName(unapply,[Default]), UsedName(FileDescriptor,[Default]), UsedName(getCause,[Default]), UsedName(getMessage,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]), UsedName(getStackTrace,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity.NoSuchFile)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.image.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.image.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(flows,[Default]), UsedName(filters,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.image.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.image.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main, pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.file.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.file.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.FileMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(flows,[Default]), UsedName(filters,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.file.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.file.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity,ModifiedNames(changes = UsedName(self,[Implicit]), UsedName(snapshotterId,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(prepend,[Default]), UsedName(persistenceId,[Default]), UsedName(journalPluginId,[Default]), UsedName(stash,[Default]), UsedName(saveSnapshot,[Default]), UsedName(snapshotPluginId,[Default]), UsedName(lastSequenceNr,[Default]), UsedName(receive,[Default]), UsedName(!=,[Default]), UsedName(aroundPreStart,[Default]), UsedName(Command,[Default]), UsedName(recoveryFinished,[Default]), UsedName(Persist,[Default]), UsedName(deferAsync,[Default]), UsedName(notifyAll,[Default]), UsedName(deleteSnapshot,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostStop,[Default]), UsedName(persistAll,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(journal,[Default]), UsedName(snapshotSequenceNr,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(internalPersistAll,[Default]), UsedName(sender,[Default]), UsedName(preRestart,[Default]), UsedName(internalPersistAllAsync,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(Persisted,[Default]), UsedName($init$,[Default]), UsedName(NoSuchFile,[Default]), UsedName(receiveRecover,[Default]), UsedName(onPersistRejected,[Default]), UsedName(snapshotStore,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(deleteSnapshots,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(mailbox,[Default]), UsedName(onReplaySuccess,[Default]), UsedName(clearStash,[Default]), UsedName(toString,[Default]), UsedName(postRestart,[Default]), UsedName(postStop,[Default]), UsedName(deleteMessages,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(unstashAll,[Default]), UsedName(onRecoveryFailure,[Default]), UsedName(Event,[Default]), UsedName(createStash,[Default]), UsedName(loadSnapshot,[Default]), UsedName(persistAllAsync,[Default]), UsedName(unstash,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(state,[Default]), UsedName(clone,[Default]), UsedName(receiveCommand,[Default]), UsedName(recoveryRunning,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(internalDeferAsync,[Default]), UsedName(synchronized,[Default]), UsedName(internalStashOverflowStrategy,[Default]), UsedName(preStart,[Default]), UsedName(internalPersist,[Default]), UsedName(persist,[Default]), UsedName(FileEntity,[Default]), UsedName(context,[Implicit]), UsedName(internalPersistAsync,[Default]), UsedName(Receive,[Default]), UsedName(recovery,[Default]), UsedName(persistAsync,[Default]), UsedName(onPersistFailure,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.FileEntity has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity.Persisted...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity.Persisted)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity.Persisted)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity.Persisted,ModifiedNames(changes = UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;Persisted;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(Persisted,[Default]), UsedName($init$,[Default]), UsedName(filename,[Default]), UsedName(tupled,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(unapply,[Default]), UsedName(curried,[Default]), UsedName(FileDescriptor,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.FileEntity.Persisted has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;Persisted;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(Persisted,[Default]), UsedName($init$,[Default]), UsedName(filename,[Default]), UsedName(tupled,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(unapply,[Default]), UsedName(curried,[Default]), UsedName(FileDescriptor,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity.Persisted)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.plugin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.plugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract by pl.dyskobol.prototype.plugins.plugin[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.file.FileMetadataExtract by pl.dyskobol.prototype.plugins.plugin[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.document.DocumentContentExtract by pl.dyskobol.prototype.plugins.plugin[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.image.ImageMetaExtract by pl.dyskobol.prototype.plugins.plugin[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.plugins.plugin, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.flows: Set(UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.flows: Set(UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(plugin,[Default]), UsedName(name,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.FileMetadataExtract: Set(UsedName(plugin,[Default]), UsedName(name,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(plugin,[Default]), UsedName(name,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(plugin,[Default]), UsedName(name,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.unzip.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.flows: Set(UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.unzip.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.flows: Set(UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.plugin,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(plugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 8 classes due to The pl.dyskobol.prototype.plugins.plugin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(plugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.plugins.plugin, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.plugins.file.flows, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract, pl.dyskobol.prototype.plugins.document.flows, pl.dyskobol.prototype.plugins.image.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(flows,[Default]), UsedName(filters,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(supportedMimes,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]))) invalidates 4 classes due to The pl.dyskobol.prototype.plugins.document.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(supportedMimes,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.Plugin...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.Plugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.Plugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.Plugin,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(FlowElements,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Plugin,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(ProcessingResult,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.Plugin has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(FlowElements,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Plugin,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(ProcessingResult,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.Plugin)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.unzip.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.unzip.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.unzip.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(filesGenerators,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.unzip.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filesGenerators,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.unzip.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filesGenerators,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.unzip.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.factories.Filters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.factories.Filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.factories.Filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.factories.Filters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Filters,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.factories.Filters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Filters,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.factories.Filters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.filters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(isHtml,[Default]), UsedName(filters,[Default]), UsedName(isOpenOffice,[Default]), UsedName(isPdf,[Default]), UsedName(isMsOffice,[Default]), UsedName(isXml,[Default]), UsedName(isTxt,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(isHtml,[Default]), UsedName(filters,[Default]), UsedName(isOpenOffice,[Default]), UsedName(isPdf,[Default]), UsedName(isMsOffice,[Default]), UsedName(isXml,[Default]), UsedName(isTxt,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.filters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(isHtml,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isOpenOffice,[Default]), UsedName(isPdf,[Default]), UsedName(notify,[Default]), UsedName(isMsOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]), UsedName(isXml,[Default]), UsedName(isTxt,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.document.filters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(isHtml,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(isOpenOffice,[Default]), UsedName(isPdf,[Default]), UsedName(notify,[Default]), UsedName(isMsOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]), UsedName(isXml,[Default]), UsedName(isTxt,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract, pl.dyskobol.prototype.plugins.document.DocumentContentExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.unzip.filesGenerators...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(filesGenerators,[Default]), UsedName(unzip,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.unzip.filesGenerators,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filesGenerators,[Default]), UsedName(unzip,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.unzip.filesGenerators has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(filesGenerators,[Default]), UsedName(unzip,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.InfoPersisted...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.InfoPersisted)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.InfoPersisted)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.PersistActor: Set(UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(InfoPersisted,[Default]), UsedName(isInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.InfoPersisted,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(pl;dyskobol;prototype;persist;InfoPersisted;init;,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(InfoPersisted,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.persist.InfoPersisted has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(pl;dyskobol;prototype;persist;InfoPersisted;init;,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(InfoPersisted,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.InfoPersisted)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.persist.PersistActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.stages.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.stages.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.stages.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.filters: Set(UsedName(Filter,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.foreaches: Set(UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.package: Set(UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.package: Set(UsedName(Filter,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.package: Set(UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(FileSource,[Default]), UsedName(Broadcast,[Default]), UsedName(Merge,[Default]), UsedName(FilesGenerator,[Default]), UsedName(Sink,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.foreaches: Set(UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.package: Set(UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(ForEach,[Default]), UsedName(Broadcast,[Default]), UsedName(Merge,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]), UsedName(ForEach,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.stages.FileReaderGraph: Set(UsedName(FilesGenerator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(ForEach,[Default]), UsedName(Broadcast,[Default]), UsedName(Merge,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.unzip.package: Set(UsedName(FilesGenerator,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.unzip.filesGenerators: Set(UsedName(FilesGenerator,[Default]), UsedName(finalize,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.stages.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(FileSource,[Default]), UsedName(notifyAll,[Default]), UsedName(ForEach,[Default]), UsedName(FileSource$default$2,[Default]), UsedName(Broadcast,[Default]), UsedName(Merge,[Default]), UsedName(Filter,[Default]), UsedName(notify,[Default]), UsedName(FilesGenerator,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(Sink,[Default]))) invalidates 15 classes due to The pl.dyskobol.prototype.stages.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(FileSource,[Default]), UsedName(notifyAll,[Default]), UsedName(ForEach,[Default]), UsedName(FileSource$default$2,[Default]), UsedName(Broadcast,[Default]), UsedName(Merge,[Default]), UsedName(Filter,[Default]), UsedName(notify,[Default]), UsedName(FilesGenerator,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(Sink,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.stages.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.filters, pl.dyskobol.prototype.plugins.document.foreaches, pl.dyskobol.prototype.plugins.image.package, pl.dyskobol.prototype.plugins.package, pl.dyskobol.prototype.plugins.document.package, pl.dyskobol.prototype.Main, pl.dyskobol.prototype.plugins.image.foreaches, pl.dyskobol.prototype.plugins.file.package, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.stages.FileReaderGraph, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract, pl.dyskobol.prototype.plugins.unzip.package, pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.image.foreaches...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.image.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(foreaches,[Default]), UsedName(resize,[Default]), UsedName(resize$default$4,[Default]), UsedName(imageMeta,[Default]), UsedName(imageMeta$default$1,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.image.foreaches,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(resize,[Default]), UsedName(resize$default$4,[Default]), UsedName(resize$default$3,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(imageMeta,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(imageMeta$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.image.foreaches has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(resize,[Default]), UsedName(resize$default$4,[Default]), UsedName(resize$default$3,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(imageMeta,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(imageMeta$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.filters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.image.filters by pl.dyskobol.prototype.plugins.filters[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.document.filters by pl.dyskobol.prototype.plugins.filters[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.file.filters by pl.dyskobol.prototype.plugins.filters[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.filters, pl.dyskobol.prototype.plugins.filters, pl.dyskobol.prototype.plugins.document.filters, pl.dyskobol.prototype.plugins.file.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(filters,[Default]), UsedName(apply,[Default]), UsedName(mimesIn,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.filters: Set(UsedName(filters,[Default]), UsedName(pl;dyskobol;prototype;plugins;filters;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(filters,[Default]), UsedName(apply,[Default]), UsedName(mimesIn,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(filters,[Default]), UsedName(apply,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.filters: Set(UsedName(filters,[Default]), UsedName(pl;dyskobol;prototype;plugins;filters;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.filters: Set(UsedName(pl;dyskobol;prototype;plugins;filters;init;,[Default]), UsedName(filters,[Default]), UsedName(mimesIn,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(filters,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(filters,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.filters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(pl;dyskobol;prototype;plugins;filters;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]))) invalidates 8 classes due to The pl.dyskobol.prototype.plugins.filters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(pl;dyskobol;prototype;plugins;filters;init;,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.filters, pl.dyskobol.prototype.plugins.filters, pl.dyskobol.prototype.plugins.document.filters, pl.dyskobol.prototype.plugins.file.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.filters, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.Main, pl.dyskobol.prototype.plugins.image.filters, pl.dyskobol.prototype.plugins.document.filters, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.image.filters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.image.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(filters,[Default]), UsedName(mimesIn,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.image.filters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.image.filters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(sizeBetween,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(mimesNotIn,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(mimesIn,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.filters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.file.flows...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.file.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(flows,[Default]), UsedName(FileMetadataExtract,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.file.flows,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(FileMetadataExtract,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(FileMetadataExtract$default$1,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.file.flows has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(FileMetadataExtract,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(FileMetadataExtract$default$1,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.model.FileProperties...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.model.FileProperties)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.model.FileProperties)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.FileMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.filters. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.ImageMetaExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.plugin. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.ForEach. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.filters. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.model.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentContentExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.FileReaderGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.Persister. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.model.FileProperties,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 2 classes due to The pl.dyskobol.model.FileProperties has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.model.FileProperties)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.stages.FileReaderGraph...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.stages.FileReaderGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.stages.FileReaderGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.stages.package: Set(UsedName(pl;dyskobol;prototype;stages;FileReaderGraph;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.stages.FileReaderGraph,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(pl;dyskobol;prototype;stages;FileReaderGraph;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.stages.FileReaderGraph has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(pl;dyskobol;prototype;stages;FileReaderGraph;init;,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.stages.FileReaderGraph)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.stages.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.model.File...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.model.File)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.model.File)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: pl.dyskobol.model.File -> Set(pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.FileMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.filters. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.foreaches: Set(UsedName(createStream,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.ImageMetaExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.plugin. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.ForEach. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.foreaches: Set(UsedName(createStream,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of simple.Library: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.filters. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.model.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentContentExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.FileReaderGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.unzip.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.Persister. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.unzip.filesGenerators: Set(UsedName(createStream,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.model.FileStream. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.model.File,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(createStream,[Default]), UsedName(hashCode,[Default]))) invalidates 6 classes due to The pl.dyskobol.model.File has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(createStream,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.model.File)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.document.foreaches, pl.dyskobol.prototype.plugins.image.foreaches, simple.Library, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.plugins.unzip.filesGenerators)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.Main,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(processed,[Default]), UsedName(notifyAll,[Default]), UsedName(imgsTypesToProess,[Implicit]), UsedName(sink,[Default]), UsedName(docsTyps,[Implicit]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(decider,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.Main has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(imgsTypesToProess,[Implicit]), UsedName(docsTyps,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.FileMetaExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.FileMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.FileMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.FileMetaExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(FileMetaExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(databaseUrl,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(excludedMimeTypes,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(pl;dyskobol;prototype;plugin;FileMetaExtract;init;,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.FileMetaExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(FileMetaExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(databaseUrl,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(excludedMimeTypes,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(pl;dyskobol;prototype;plugin;FileMetaExtract;init;,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.FileMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.stages.Persister...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.stages.Persister)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.stages.Persister)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.stages.Persister,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.stages.Persister has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.stages.Persister)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.filters: Set(UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.FileMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(plugin,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.foreaches: Set(UsedName(foreaches,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(plugin,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.foreaches: Set(UsedName(foreaches,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.filters: Set(UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.filters: Set(UsedName(filters,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(plugin,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]), UsedName(foreaches,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(filters,[Default]), UsedName(plugin,[Default]), UsedName(package,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(plugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]))) invalidates 11 classes due to The pl.dyskobol.prototype.plugins.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(filters,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(plugin,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(package,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.filters, pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.plugins.document.foreaches, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.plugins.image.foreaches, pl.dyskobol.prototype.plugins.image.filters, pl.dyskobol.prototype.plugins.document.filters, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.foreaches...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.image.foreaches by pl.dyskobol.prototype.plugins.foreaches[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.document.foreaches by pl.dyskobol.prototype.plugins.foreaches[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.plugins.file.foreaches by pl.dyskobol.prototype.plugins.foreaches[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.foreaches, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.plugins.foreaches, pl.dyskobol.prototype.plugins.document.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.ImageMetaExtract: Set(UsedName(foreaches,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.FileMetadataExtract: Set(UsedName(foreaches,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.foreaches: Set(UsedName(foreaches,[Default]), UsedName(pl;dyskobol;prototype;plugins;foreaches;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.foreaches: Set(UsedName(foreaches,[Default]), UsedName(pl;dyskobol;prototype;plugins;foreaches;init;,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]), UsedName(foreaches,[Default]), UsedName(pl;dyskobol;prototype;plugins;foreaches;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(foreaches,[Default]), UsedName(apply,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.foreaches,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;plugins;foreaches;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 8 classes due to The pl.dyskobol.prototype.plugins.foreaches has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;plugins;foreaches;init;,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.foreaches, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.plugins.foreaches, pl.dyskobol.prototype.plugins.document.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract, pl.dyskobol.prototype.plugins.document.foreaches, pl.dyskobol.prototype.plugins.image.ImageMetaExtract, pl.dyskobol.prototype.plugins.image.foreaches, pl.dyskobol.prototype.plugins.document.DocumentContentExtract, pl.dyskobol.prototype.plugins.file.foreaches, pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity.Persist...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity.Persist)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity.Persist)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity.Persist,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(Persist,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(fileInfo,[Default]), UsedName(unapply,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;Persist;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.FileEntity.Persist has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(andThen,[Default]), UsedName(compose,[Default]), UsedName(Persist,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(fileInfo,[Default]), UsedName(unapply,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(pl;dyskobol;prototype;persist;FileEntity;Persist;init;,[Default]), UsedName(synchronized,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity.Persist)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.stages.ForEach...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.stages.ForEach)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.stages.ForEach)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.FileMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.ImageMetaExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentContentExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.stages.ForEach,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.stages.ForEach has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.stages.ForEach)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.file.FileMetadataExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.flows: Set(UsedName(FileMetadataExtract,[Default]), UsedName(flow,[Default]), UsedName(pl;dyskobol;prototype;plugins;file;FileMetadataExtract;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.file.FileMetadataExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(FileMetadataExtract,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(pl;dyskobol;prototype;plugins;file;FileMetadataExtract;init;,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.file.FileMetadataExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(FileMetadataExtract,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(pl;dyskobol;prototype;plugins;file;FileMetadataExtract;init;,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.foreaches...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract: Set(UsedName(msOfficeMeta,[Default]), UsedName(foreaches,[Default]), UsedName(openMeta,[Default]), UsedName(pdfMetat,[Default]), UsedName(htmlMeta,[Default]), UsedName(txtMeta,[Default]), UsedName(xmlMeta,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.DocumentContentExtract: Set(UsedName(pdfContent,[Default]), UsedName(msOfficeContent,[Default]), UsedName(foreaches,[Default]), UsedName(openMeta,[Default]), UsedName(xmlContent,[Default]), UsedName(htmlContent,[Default]), UsedName(txtMeta,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.foreaches,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(pdfContent,[Default]), UsedName(msOfficeContent,[Default]), UsedName(msOfficeMeta,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(openMeta,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pdfMetat,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(htmlMeta,[Default]), UsedName(txtContent,[Default]), UsedName(xmlContent,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlContent,[Default]), UsedName(txtMeta,[Default]), UsedName(xmlMeta,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.document.foreaches has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(pdfContent,[Default]), UsedName(msOfficeContent,[Default]), UsedName(msOfficeMeta,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(openMeta,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(pdfMetat,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(htmlMeta,[Default]), UsedName(txtContent,[Default]), UsedName(xmlContent,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(openOffice,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlContent,[Default]), UsedName(txtMeta,[Default]), UsedName(xmlMeta,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract, pl.dyskobol.prototype.plugins.document.DocumentContentExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.FileEntity.Command...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.FileEntity.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding pl.dyskobol.prototype.persist.FileEntity.Persist by pl.dyskobol.prototype.persist.FileEntity.Command[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.FileEntity.Persist, pl.dyskobol.prototype.persist.FileEntity.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.FileEntity.Command,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(Command,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.persist.FileEntity.Command has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(Command,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.FileEntity.Persist, pl.dyskobol.prototype.persist.FileEntity.Command)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.persisters.Persisters...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.persisters.Persisters)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.persisters.Persisters)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.persisters.Persisters,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(oraclePersister,[Default]), UsedName(notify,[Default]), UsedName(Persisters,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.persisters.Persisters has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(oraclePersister,[Default]), UsedName(notify,[Default]), UsedName(Persisters,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.persisters.Persisters)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.ImageMetaExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.ImageMetaExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(thumbnailSizeWH,[Default]), UsedName(databaseUrl,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;plugin;ImageMetaExtract;init;,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.ImageMetaExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(thumbnailSizeWH,[Default]), UsedName(databaseUrl,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(pl;dyskobol;prototype;plugin;ImageMetaExtract;init;,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.model.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.model.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.model.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.FileMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.filters. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.ImageMetaExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.Main. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.plugin. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.ForEach. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.foreaches. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.file.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentContentExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.foreaches: Set(UsedName(getClass,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.FileReaderGraph. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.stages.Persister. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.document.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of pl.dyskobol.prototype.plugins.image.flows. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.model.package,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]))) invalidates 2 classes due to The pl.dyskobol.model.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.model.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.persist.PersistActor: Set(UsedName(==,[Default]), UsedName(db,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Main,[Default]), UsedName(mimetypes,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.Main,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(db,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(toString,[Default]), UsedName(executionStart,[Default]), UsedName(notify,[Default]), UsedName(Main,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(mimetypes,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.persist.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(db,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(main,[Default]), UsedName(toString,[Default]), UsedName(executionStart,[Default]), UsedName(notify,[Default]), UsedName(Main,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(mimetypes,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.persist.PersistActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.image.ImageMetaExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.image.flows: Set(UsedName(extractThumbnails,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(pl;dyskobol;prototype;plugins;image;ImageMetaExtract;init;,[Default]), UsedName(thumbnailSizeWH,[Default]), UsedName(mimeTypes,[Default]), UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.image.ImageMetaExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(extractThumbnails,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(pl;dyskobol;prototype;plugins;image;ImageMetaExtract;init;,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(thumbnailSizeWH,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.image.ImageMetaExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(extractThumbnails,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(pl;dyskobol;prototype;plugins;image;ImageMetaExtract;init;,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(thumbnailSizeWH,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.ImageMetaExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.image.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.factories.Meta...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.factories.Meta)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.factories.Meta)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.factories.Meta,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOfficeExtract,[Default]), UsedName(!=,[Default]), UsedName(txtExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(imageMeta,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(openOfficeExtract,[Default]), UsedName(fileMeta,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(xmlExtract,[Default]), UsedName(PDFExtract,[Default]), UsedName(Meta,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlExtract,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.factories.Meta has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOfficeExtract,[Default]), UsedName(!=,[Default]), UsedName(txtExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(imageMeta,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(openOfficeExtract,[Default]), UsedName(fileMeta,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(xmlExtract,[Default]), UsedName(PDFExtract,[Default]), UsedName(Meta,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlExtract,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.factories.Meta)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.DocsExtractor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.DocsExtractor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.DocsExtractor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.DocsExtractor,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(contentDatabaseUrl,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(DocsExtractor,[Default]), UsedName(pl;dyskobol;prototype;plugin;DocsExtractor;init;,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(metaDatabaseUrl,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.DocsExtractor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(contentDatabaseUrl,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(mimeTypes,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(DocsExtractor,[Default]), UsedName(pl;dyskobol;prototype;plugin;DocsExtractor;init;,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(metaDatabaseUrl,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.DocsExtractor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.factories.Helper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.factories.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.factories.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.factories.Helper,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Helper,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(extractSkeleton,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.factories.Helper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Helper,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(extractSkeleton,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.factories.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.file.foreaches...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.file.FileMetadataExtract: Set(UsedName(foreaches,[Default]), UsedName(fileMeta,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.file.foreaches,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(fileMeta,[Default]), UsedName(fileMeta$default$1,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.file.foreaches has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(foreaches,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(fileMeta,[Default]), UsedName(fileMeta$default$1,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.file.foreaches)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.file.FileMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.factories.Linkers...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.factories.Linkers)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.factories.Linkers)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.factories.Linkers,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(balance,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(Linkers,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(broadcast,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.factories.Linkers has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(balance,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(merge,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(Linkers,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(broadcast,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.factories.Linkers)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.DocumentContentExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.DocumentContentExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.DocumentContentExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.unzip.package: Set(UsedName(DocumentContentExtract,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.flows: Set(UsedName(DocumentContentExtract,[Default]), UsedName(flow,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentContentExtract;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.DocumentContentExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DocumentContentExtract,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentContentExtract;init;,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.document.DocumentContentExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(DocumentContentExtract,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentContentExtract;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.DocumentContentExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.unzip.package, pl.dyskobol.prototype.plugins.document.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from PersistenceService...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(PersistenceService)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(PersistenceService)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(PersistenceService,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(PersistenceService,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(persist,[Default]))) invalidates 1 classes due to The PersistenceService has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(PersistenceService,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(persist,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(PersistenceService)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.PersistActor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.PersistActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.PersistActor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.PersistActor,ModifiedNames(changes = UsedName(self,[Implicit]), UsedName(PersistActor,[Default]), UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(receive,[Default]), UsedName(pl;dyskobol;prototype;persist;PersistActor;init;,[Default]), UsedName(!=,[Default]), UsedName(aroundPreStart,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(aroundPostStop,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(sender,[Default]), UsedName(preRestart,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(db,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(aroundReceive,[Default]), UsedName(toString,[Default]), UsedName(postRestart,[Default]), UsedName(postStop,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(preStart,[Default]), UsedName(context,[Implicit]), UsedName(Receive,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.PersistActor has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(self,[Implicit]), UsedName(context,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.PersistActor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.Tables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.Tables,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(MimeType,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(MimeTypes,[Default]), UsedName(notify,[Default]), UsedName(Tables,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.Tables has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(MimeType,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(MimeTypes,[Default]), UsedName(notify,[Default]), UsedName(Tables,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.unzip.package: Set(UsedName(DocumentMetadataExtract,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.plugins.document.flows: Set(UsedName(DocumentMetadataExtract,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentMetadataExtract;init;,[Default]), UsedName(flow,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(DocumentMetadataExtract,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentMetadataExtract;init;,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 3 classes due to The pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(DocumentMetadataExtract,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(pl;dyskobol;prototype;plugins;document;DocumentMetadataExtract;init;,[Default]), UsedName(flow,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.document.DocumentMetadataExtract)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.plugins.unzip.package, pl.dyskobol.prototype.plugins.document.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugins.image.flows...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugins.image.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugins.image.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of pl.dyskobol.prototype.Main: Set(UsedName(ImageMetaExtract,[Default]), UsedName(flows,[Default]), UsedName(ImageMetaExtract$default$2,[Default]), UsedName(ImageMetaExtract$default$3,[Default]), UsedName(ne,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugins.image.flows,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(ImageMetaExtract$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(ImageMetaExtract$default$3,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(ImageMetaExtract$default$1,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]))) invalidates 2 classes due to The pl.dyskobol.prototype.plugins.image.flows has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(ImageMetaExtract,[Default]), UsedName(flows,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(ImageMetaExtract$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(ImageMetaExtract$default$3,[Default]), UsedName(isInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(ImageMetaExtract$default$1,[Default]), UsedName(notify,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugins.image.flows)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(pl.dyskobol.prototype.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.plugin.factories.Content...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.plugin.factories.Content)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.plugin.factories.Content)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.plugin.factories.Content,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOfficeExtract,[Default]), UsedName(!=,[Default]), UsedName(txtExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(thumbNail,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(openOfficeExtract,[Default]), UsedName(Content,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(xmlExtract,[Default]), UsedName(PDFExtract,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlExtract,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.plugin.factories.Content has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(msOfficeExtract,[Default]), UsedName(!=,[Default]), UsedName(txtExtract,[Default]), UsedName(notifyAll,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(thumbNail,[Default]), UsedName(asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(isInstanceOf,[Default]), UsedName(openOfficeExtract,[Default]), UsedName(Content,[Default]), UsedName(toString,[Default]), UsedName(notify,[Default]), UsedName(xmlExtract,[Default]), UsedName(PDFExtract,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(htmlExtract,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.plugin.factories.Content)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from pl.dyskobol.prototype.persist.Tables.MimeTypes...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(pl.dyskobol.prototype.persist.Tables.MimeTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(pl.dyskobol.prototype.persist.Tables.MimeTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(pl.dyskobol.prototype.persist.Tables.MimeTypes,ModifiedNames(changes = UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(index,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(tableTag,[Default]), UsedName(create_*,[Default]), UsedName(!=,[Default]), UsedName(tableNode,[Default]), UsedName(TableElementType,[Default]), UsedName(foreignKeys,[Default]), UsedName(tableProvider,[Default]), UsedName(notifyAll,[Default]), UsedName(indexes,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(foreignKey,[Default]), UsedName(mimetype,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(*,[Default]), UsedName(schemaName,[Default]), UsedName(id,[Default]), UsedName($init$,[Default]), UsedName(tableName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(eq,[Default]), UsedName(index$default$3,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableConstraints,[Default]), UsedName(column,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(MimeTypes,[Default]), UsedName(toNode,[Default]), UsedName(notify,[Default]), UsedName(primaryKey,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(encodeRef,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(O,[Default]), UsedName(pl;dyskobol;prototype;persist;Tables;MimeTypes;init;,[Default]), UsedName(primaryKeys,[Default]))) invalidates 1 classes due to The pl.dyskobol.prototype.persist.Tables.MimeTypes has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getClass,[Default]), UsedName(##,[Default]), UsedName(index,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(tableTag,[Default]), UsedName(create_*,[Default]), UsedName(!=,[Default]), UsedName(tableNode,[Default]), UsedName(TableElementType,[Default]), UsedName(foreignKeys,[Default]), UsedName(tableProvider,[Default]), UsedName(notifyAll,[Default]), UsedName(indexes,[Default]), UsedName($asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(foreignKey,[Default]), UsedName(mimetype,[Default]), UsedName(==,[Default]), UsedName(wait,[Default]), UsedName(*,[Default]), UsedName(schemaName,[Default]), UsedName(id,[Default]), UsedName($init$,[Default]), UsedName(tableName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(eq,[Default]), UsedName(index$default$3,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableConstraints,[Default]), UsedName(column,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(toString,[Default]), UsedName(name,[Default]), UsedName(MimeTypes,[Default]), UsedName(toNode,[Default]), UsedName(notify,[Default]), UsedName(primaryKey,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(encodeRef,[Default]), UsedName(clone,[Default]), UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(O,[Default]), UsedName(pl;dyskobol;prototype;persist;Tables;MimeTypes;init;,[Default]), UsedName(primaryKeys,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(pl.dyskobol.prototype.persist.Tables.MimeTypes)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
